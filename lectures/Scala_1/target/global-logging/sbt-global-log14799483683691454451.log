[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\ASUS\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\ASUS\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Oracle Corporation Java 19.0.1)
[debug]       Load.loadUnit: plugins took 140.9107ms
[debug]       Load.loadUnit: defsScala took 0.3465ms
[debug] [Loading] Scanning directory C:\Users\ASUS\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\ASUS\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 24.3404 ms
[debug]           Load.resolveProject(global-plugins) took 67.5303ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\ASUS\.sbt\1.0\plugins, plugins: List(<none>))) took 123.1941ms
[debug] [Loading] Done in C:\Users\ASUS\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 155.8277ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2977ms
[debug]     Load.loadUnit(file:/C:/Users/ASUS/.sbt/1.0/plugins/, ...) took 309.7429ms
[debug]   Load.apply: load took 608.8003ms
[debug]   Load.apply: resolveProjects took 10.642ms
[debug]   Load.apply: finalTransforms took 88.3775ms
[debug]   Load.apply: config.delegates took 10.3442ms
[debug]   Load.apply: Def.make(settings)... took 540.5638ms
[debug]   Load.apply: structureIndex took 127.893ms
[debug]   Load.apply: mkStreams took 2.8244ms
[info] loading global plugins from C:\Users\ASUS\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5347.4455ms
[debug]           Load.loadUnit: plugins took 21.5035ms
[debug]           Load.loadUnit: defsScala took 0.0027ms
[debug] [Loading] Scanning directory D:\Scala\lectures\Scala_1\project
[debug]             Load.loadUnit: mkEval took 5.2842ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Scala\lectures\Scala_1\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.2184 ms
[info] loading settings for project scala_1-build from idea.sbt ...
[debug]               Load.resolveProject(scala_1-build) took 2.5838ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala_1-build, base: D:\Scala\lectures\Scala_1\project, plugins: List(<none>))) took 4.2965ms
[debug] [Loading] Done in D:\Scala\lectures\Scala_1\project, returning: (scala_1-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2014.938ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.3344ms
[debug]         Load.loadUnit(file:/D:/Scala/lectures/Scala_1/project/, ...) took 2040.6398ms
[debug]       Load.apply: load took 2041.8901ms
[debug]       Load.apply: resolveProjects took 0.1212ms
[debug]       Load.apply: finalTransforms took 8.1483ms
[debug]       Load.apply: config.delegates took 0.3695ms
[debug]       Load.apply: Def.make(settings)... took 58.6106ms
[debug]       Load.apply: structureIndex took 22.9788ms
[debug]       Load.apply: mkStreams took 0.0025ms
[info] loading project definition from D:\Scala\lectures\Scala_1\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[info] compiling 1 Scala source to D:\Scala\lectures\Scala_1\project\target\scala-2.12\sbt-1.0\classes ...
[info] Non-compiled module 'compiler-bridge_2.12' for Scala 2.12.17. Compiling...
[info]   Compilation completed in 10.627s.
[info] done compiling
[debug]     Load.loadUnit: plugins took 19424.5977ms
[debug]     Load.loadUnit: defsScala took 0.0026ms
[debug] [Loading] Scanning directory D:\Scala\lectures\Scala_1
[debug]       Load.loadUnit: mkEval took 0.1523ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.6143 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 28.1516ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\Scala\lectures\Scala_1, plugins: List(<none>))) took 31.5326ms
[debug] [Loading] Done in D:\Scala\lectures\Scala_1, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1104.8665ms
[debug]     Load.loadUnit: cleanEvalClasses took 7.3305ms
[debug]   Load.loadUnit(file:/D:/Scala/lectures/Scala_1/, ...) took 20537.4612ms
[debug] Load.apply: load took 20539.3679ms
[debug] Load.apply: resolveProjects took 0.1281ms
[debug] Load.apply: finalTransforms took 29.7391ms
[debug] Load.apply: config.delegates took 0.3496ms
[debug] Load.apply: Def.make(settings)... took 55.3666ms
[debug] Load.apply: structureIndex took 21.1592ms
[debug] Load.apply: mkStreams took 0.0029ms
[info] set current project to Scala_1 (in build file:/D:/Scala/lectures/Scala_1/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 57573 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 57573, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Scala_1 (in build file:/D:/Scala/lectures/Scala_1/)
[debug] > Exec(idea-shell, None, None)
